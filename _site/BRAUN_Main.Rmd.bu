---
title: "BRAUN"
output: 
  flexdashboard::flex_dashboard:
    social: [ "twitter", "facebook", "menu" ]
    navbar:
      - { title: "C.albicans TR VS FP", href: "R/BRAUN_ca_3678V3621.html#candida-albicans" , align: "left"}
      - { title: "C.albicans 0hr VS 3-6hr", href: "R/BRAUN_ca_3678V3621.html#candida-albicans" , align: "left"}
      - { title: "C.albicans CEC3678 V CEC3621", href: "R/BRAUN_ca_3678V3621.html#candida-albicans" , align: "left"}
      - { title: "H.sapiens 0hr VS 3-6hr", href: "R/BRAUN_ca_3678V3621.html#candida-albicans" , align: "left"}
      - { title: "Main", href: "R/BRAUN_ca_3678V3621.html#candida-albicans" , align: "Right"}
    # self_contained: F
    # vertical_layout: scroll
# source: embed
# widescreen: true
# fig_width: 7
# fig_height: 6
# fig_caption: true
df_print: kable
# css: https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css
---


<!-- [*Candida albicans*](R/BRAUN_ca_3678V3621.html#candida-albicans){data-navmenu="Normalisation"} -->
<!-- ===================================== -->

<!-- ```{r BRAUN Ca normalisation} -->
<!-- # rmarkdown::render("BRAUN_ca_TRVFP.Rmd",flexdashboard::flex_dashboard()) -->
<!-- ``` -->


<!-- [*Candida albicans* TR VS FP](R/BRAUN_ca_TRVFP.html#candida-albicans-tr-vs-fp) -->
<!-- ===================================== -->

<!-- [*Candida albicans* TR VS FP](R/BRAUN_ca_TRVFP.html#candida-albicans-tr-vs-fp-1)  -->
<!-- ===================================== -->

<!-- [*Candida albicans* TR VS FP](R/BRAUN_ca_TRVFP.html#candida-albicans-tr-vs-fp-2)  -->
<!-- ===================================== -->


<!-- *Candida albicans* 0hr VS 3-6hr {data-navmenu="Differential gene expression analysis"} -->
<!-- ===================================== -->

<!-- ```{r setup DEG Time"} -->

<!-- # DEG -->
<!-- NameSharedData="Ca_Time" -->
<!-- # Variable for the contrast map to define the comparaison to perform -->
<!-- DE_Contrast_Cond=AdditionalFact -->
<!-- Ref=c("CEC3605", 0,"FP") -->
<!-- # Sample="Conditions" -->
<!-- # Select the main comparaison variable -->
<!-- MainComparaison="time" -->
<!-- SecondaryComparaison=AdditionalFact[c(1,3)] -->
<!-- # define the log2FC cutoff and the pvalue cutoff -->
<!-- LFC_Cutoff=0.5 -->
<!-- pVal_Cutoff=0.05 -->
<!-- # Clustering -->
<!-- # Number of cluster -->
<!-- ClustNumb=7 -->
<!-- # distance method -->
<!-- DistMethod="manhattan" -->
<!-- # agglomeration method -->
<!-- # AggloMethod="ward.D" -->
<!-- AggloMethod="centroid" -->
<!-- # Decide Cutoff. for example if 3 , gene is selected if differentially expressed in 1/3 of conditions -->
<!-- Factor_Numb_Conditions_gene_diff_expressed=3 -->
<!-- # pattern to extract chromosome name -->
<!-- Pattern_X="chr([^_]{1,2})" -->
<!-- ``` -->

<!-- ```{r KnitDEG Ca Time, child="R/20210526-DEG.Rmd"} -->
<!-- ``` -->

<!-- *Candida albicans* 0hr VS 3-6hr {data-navmenu="GO"} -->
<!-- ===================================== -->

<!-- ```{r GO Ca Time setup} -->
<!-- #  GO enrichment -->
<!-- # library(org.Calbicans.eg.db) -->
<!-- OrgDb=org.Calbicans.eg.db::org.Calbicans.eg.db -->
<!-- keytype="GID" -->
<!-- GO_pValue=0.2 -->
<!-- GO_qValue=GO_pValue -->
<!-- MinGO=10 -->
<!-- MaxGO=50 -->
<!-- # STRING -->
<!-- STRING_DB=string_db_Ca -->
<!-- StringConnection=50 -->
<!-- ``` -->

<!-- ```{r prepare Go Ca Time, child="R/20210608-GO.Rmd"} -->
<!-- ``` -->

<!-- ```{r Plot GO Ca Time ,child="R/20210608-GO_Plots_Interactive.Rmd"} -->
<!-- ``` -->

<!-- *Candida albicans* 0hr VS 3-6hr {data-navmenu="Gene Networks"} -->
<!-- ===================================== -->

<!-- Column {.tabset} -->
<!-- ------------------------------------- -->

<!-- ```{r Plot GO Ca Time,  comment='', echo=FALSE, message=FALSE, warning=FALSE, results="asis"} -->
<!-- out = NULL -->
<!-- for (i in ClustersID) { -->
<!--   C=i -->
<!--   if (length(PlotList[[as.character(C)]])<2){ -->
<!--     print("No GO emerge from that list of gene") -->
<!--   }else{ -->
<!--     out <- c(out, knit_child('R/20210608-GO_Plots.Rmd', quiet=TRUE)) -->
<!--   } -->
<!-- } -->
<!-- cat(knit(text=unlist(paste(out, collapse = '\n')), quiet=TRUE)) -->

<!-- ``` -->



<!-- *Homo sapiens* {data-navmenu="Normalisation" .storyboard} -->
<!-- ===================================== -->

<!-- ```{r Var Hs BRAUN} -->
<!-- # Pair="BRAUN" -->
<!-- # Path and file names -->
<!-- # root folder -->
<!-- # RootFolder="/media/edurandau/DATA/Eric_Durandau/Sanglard/Labbook/Workbench/Bioinformatics/GREEN-BRAUN-data_exploration/Tests" -->
<!-- # Output subfolder name -->
<!-- # OutputFolder="Hs_3-6h_V_0h" -->
<!-- # Outputfolder path -->
<!-- # OutputFolderPath=file.path(RootFolder,OutputFolder) -->

<!-- # Raw data table -->
<!-- Path2Data=file.path(Data_dir,"20210109-Hs_GREEN_BRAUN_Raw_Read_Count.tab") -->
<!-- # Table containing the list of sample ID and coresponding real names -->
<!-- Path2SubTbl=file.path(Data_dir,"20200723-LIMS_Sample_Submission.tbl") -->
<!-- # Read count table with corrected sample names -->
<!-- RC_correctedSampleNames=paste0(Pair,"Hs_CountTable_SampleNames.tbl",collapse = "_") -->

<!-- LoadDataFn=LoadRawReadCountsHs -->
<!-- # Variable related to Normalisation, Differential expression analysis, clustering and the GO part -->
<!-- # NORMALISATION -->
<!-- # RegEx pattern enabling to extract the MetaData from samples real names -->
<!-- RegexPattern="(?<Isolate>\\w{3}\\d{4})_(?<replicate>\\d{1})_TR_(?<time>\\d{1})" -->
<!-- # RegEx pattern enabling to remove some sample from the analysis -->
<!-- # ExcludeSampleRegex="(?<Isolate>\\w{3}(3621|3678))_(?<replicate>\\d+)" -->
<!-- ExcludeSampleRegex="(3621_\\d{1}|3678_\\d{1}|3605_\\d{1}_FP|3617_\\d{1}_FP)" -->
<!-- # Metadata column to conserve in the "Genes" table. Renames the column to make it compatible with HomeMade functions -->
<!-- GenesMetaData=c(2:7, 10,12,15,16) -->
<!-- Colnames4Genes=c("Chr","Start", "End", "Strand","Length", "Gene", "ASSEMBLY22_ID","Note","EntrezID", "ORF19_ID") -->
<!-- # Additional factor for the normalisation and DE -->
<!-- AdditionalFact=c("time", "Isolate") -->
<!-- # pattern to extract chromosome name -->
<!-- Pattern_X="\\w+" -->
<!-- ``` -->


<!-- ```{r BRAUN Hm normalisation, child="R/20210526-Normalisation.Rmd"} -->
<!-- ``` -->

<!-- *Homo sapiens* Time {data-navmenu="Differential gene expression analysis" .storyboard} -->
<!-- ===================================== -->

<!-- ```{r setup DEG Hm Time} -->

<!-- # DEG -->
<!-- NameSharedData="Hm_time" -->
<!--   # Variable for the contrast map to define the comparaison to perform -->
<!-- DE_Contrast_Cond=AdditionalFact -->
<!-- Ref=c( 0,"CEC3605") -->
<!-- # Sample="Conditions" -->
<!--   # Select the main comparaison variable -->
<!-- MainComparaison="time" -->
<!-- SecondaryComparaison=AdditionalFact -->
<!--   # define the log2FC cutoff and the pvalue cutoff -->
<!-- LFC_Cutoff=0.5 -->
<!-- pVal_Cutoff=0.05 -->
<!-- # Clustering -->
<!--   # Number of cluster -->
<!-- ClustNumb=4 -->
<!--   # distance method -->
<!-- DistMethod="manhattan" -->
<!--   # agglomeration method -->
<!-- AggloMethod="centroid" -->
<!--   # Decide Cutoff. for example if 3 , gene is selected if differentially expressed in 1/3 of comparisons -->
<!-- Factor_Numb_Conditions_gene_diff_expressed=3 -->

<!-- ``` -->



<!-- ```{r KnitDEG Hm Time, child="R/20210526-DEG.Rmd"} -->
<!-- ``` -->


<!-- *Homo sapiens* Time {data-navmenu="GO"} -->
<!-- ===================================== -->


<!-- ```{r GO Hm TR-FP setup} -->
<!-- #  GO enrichment -->
<!-- # library(org.Calbicans.eg.db) -->
<!-- #  GO enrichment -->
<!-- library(org.Hs.eg.db) -->
<!-- OrgDb=org.Hs.eg.db -->
<!-- keytype="ENTREZID" -->
<!-- GO_pValue=0.1 -->
<!-- GO_qValue=GO_pValue -->
<!-- MinGO=10 -->
<!-- MaxGO=500 -->
<!-- # STRING -->
<!-- STRING_DB=string_db_Hs -->
<!-- StringConnection=50 -->
<!-- ``` -->

<!-- ```{r prepare Go hs time, child="R/20210608-GO.Rmd"} -->
<!-- ``` -->

<!-- ```{r Plot GO Hs time, child="R/20210608-GO_Plots_Interactive.Rmd"} -->
<!-- ``` -->

<!-- *Homo sapiens* Time {data-navmenu="Gene Networks"} -->
<!-- ===================================== -->

<!-- Column {.tabset} -->
<!-- ------------------------------------- -->

<!-- ```{r Plot GO hs time,  comment='', echo=FALSE, message=FALSE, warning=FALSE, results="asis"} -->
<!-- out = NULL -->
<!-- for (i in ClustersID) { -->
<!--   C=i -->
<!--   if (length(PlotList[[as.character(C)]])<2){ -->
<!--     print("No GO emerge from that list of gene") -->
<!--   }else{ -->
<!--     out <- c(out, knit_child('R/20210608-GO_Plots.Rmd', quiet=TRUE)) -->
<!--   } -->
<!-- } -->
<!-- cat(knit(text=unlist(paste(out, collapse = '\n')), quiet=TRUE)) -->

<!-- ``` -->
